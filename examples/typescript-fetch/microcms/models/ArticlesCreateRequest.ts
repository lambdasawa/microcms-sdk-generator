/* tslint:disable */
/* eslint-disable */
/**
 * microcms-sdk-generator-demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ArticlesCreateRequest
 */
export interface ArticlesCreateRequest {
    /**
     * 著者
     * @type {string}
     * @memberof ArticlesCreateRequest
     */
    author: string;
    /**
     * カテゴリ
     * @type {Array<string>}
     * @memberof ArticlesCreateRequest
     */
    category: Array<ArticlesCreateRequestCategoryEnum>;
    /**
     * 本文
     * @type {string}
     * @memberof ArticlesCreateRequest
     */
    content: string;
    /**
     * 締切日時
     * @type {Date}
     * @memberof ArticlesCreateRequest
     */
    deadline: Date;
    /**
     * タグ
     * @type {Array<string>}
     * @memberof ArticlesCreateRequest
     */
    tag: Array<ArticlesCreateRequestTagEnum>;
    /**
     * タイトル
     * @type {string}
     * @memberof ArticlesCreateRequest
     */
    title: string;
}

/**
* @export
* @enum {string}
*/
export enum ArticlesCreateRequestCategoryEnum {
    Programming = 'programming',
    Game = 'game'
}/**
* @export
* @enum {string}
*/
export enum ArticlesCreateRequestTagEnum {
    Typescript = 'typescript',
    Golang = 'golang',
    Java = 'java'
}

export function ArticlesCreateRequestFromJSON(json: any): ArticlesCreateRequest {
    return ArticlesCreateRequestFromJSONTyped(json, false);
}

export function ArticlesCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticlesCreateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'author': json['author'],
        'category': json['category'],
        'content': json['content'],
        'deadline': (new Date(json['deadline'])),
        'tag': json['tag'],
        'title': json['title'],
    };
}

export function ArticlesCreateRequestToJSON(value?: ArticlesCreateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'author': value.author,
        'category': value.category,
        'content': value.content,
        'deadline': (value.deadline.toISOString()),
        'tag': value.tag,
        'title': value.title,
    };
}


