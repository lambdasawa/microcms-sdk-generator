/* tslint:disable */
/* eslint-disable */
/**
 * microcms-sdk-generator-demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ArticlesPatchRequest
 */
export interface ArticlesPatchRequest {
    /**
     * 著者
     * @type {string}
     * @memberof ArticlesPatchRequest
     */
    author?: string;
    /**
     * カテゴリ
     * @type {Array<string>}
     * @memberof ArticlesPatchRequest
     */
    category?: Array<ArticlesPatchRequestCategoryEnum>;
    /**
     * 本文
     * @type {string}
     * @memberof ArticlesPatchRequest
     */
    content?: string;
    /**
     * 締切日時
     * @type {Date}
     * @memberof ArticlesPatchRequest
     */
    deadline?: Date;
    /**
     * タグ
     * @type {Array<string>}
     * @memberof ArticlesPatchRequest
     */
    tag?: Array<ArticlesPatchRequestTagEnum>;
    /**
     * タイトル
     * @type {string}
     * @memberof ArticlesPatchRequest
     */
    title?: string;
}

/**
* @export
* @enum {string}
*/
export enum ArticlesPatchRequestCategoryEnum {
    Programming = 'programming',
    Game = 'game'
}/**
* @export
* @enum {string}
*/
export enum ArticlesPatchRequestTagEnum {
    Typescript = 'typescript',
    Golang = 'golang',
    Java = 'java'
}

export function ArticlesPatchRequestFromJSON(json: any): ArticlesPatchRequest {
    return ArticlesPatchRequestFromJSONTyped(json, false);
}

export function ArticlesPatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticlesPatchRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'author': !exists(json, 'author') ? undefined : json['author'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'deadline': !exists(json, 'deadline') ? undefined : (new Date(json['deadline'])),
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'title': !exists(json, 'title') ? undefined : json['title'],
    };
}

export function ArticlesPatchRequestToJSON(value?: ArticlesPatchRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'author': value.author,
        'category': value.category,
        'content': value.content,
        'deadline': value.deadline === undefined ? undefined : (value.deadline.toISOString()),
        'tag': value.tag,
        'title': value.title,
    };
}


